# This is the CMakeCache file.
# For build in directory: /home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build
# It was generated by CMake: /usr/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Include minimal development tests in the initial attestation
// regression test suite
ATTEST_INCLUDE_TEST_CODE:BOOL=OFF

//The size of the initial attestation key in bits
ATTEST_KEY_BITS:STRING=256

//Whether to build BL1
BL1:BOOL=OFF

//BL1 Header size
BL1_HEADER_SIZE:STRING=0x000

//BL1 Trailer size
BL1_TRAILER_SIZE:STRING=0x000

//Whether to build BL2
BL2:BOOL=OFF

//BL2 Header size
BL2_HEADER_SIZE:STRING=0x000

//Trailer size
BL2_TRAILER_SIZE:STRING=0x2000

//Build QCBOR test suite [OFF, LIB, APP]
BUILD_QCBOR_TEST:STRING=OFF

//Compile with the warning flags used in the QCBOR release process
BUILD_QCBOR_WARN:BOOL=OFF

//Build shared libraries instead of static ones
BUILD_SHARED_LIBS:BOOL=OFF

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/usr/bin/arm-none-eabi-addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/arm-none-eabi-ar

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_ASM_COMPILER_AR:FILEPATH=/usr/bin/arm-none-eabi-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_ASM_COMPILER_RANLIB:FILEPATH=/usr/bin/arm-none-eabi-gcc-ranlib

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=-mcpu=cortex-m33+nofp

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=-g

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Build type: [Debug, Release, RelWithDebInfo, MinSizeRel]
CMAKE_BUILD_TYPE:STRING=MinSizeRel

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:STRING=/usr/bin/arm-none-eabi-g++

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_AR:FILEPATH=/usr/bin/arm-none-eabi-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/usr/bin/arm-none-eabi-gcc-ranlib

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=-mcpu=cortex-m33+nofp

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:STRING=/usr/bin/arm-none-eabi-gcc

//A wrapper around 'ar' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_AR:FILEPATH=/usr/bin/arm-none-eabi-gcc-ar

//A wrapper around 'ranlib' adding the appropriate '--plugin' option
// for the GCC compiler
CMAKE_C_COMPILER_RANLIB:FILEPATH=/usr/bin/arm-none-eabi-gcc-ranlib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=-mcpu=cortex-m33+nofp

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

CMAKE_INSTALL_PREFIX:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/install

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/arm-none-eabi-ld

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/gmake

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/arm-none-eabi-nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/usr/bin/arm-none-eabi-objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/arm-none-eabi-objdump

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Trusted Firmware M

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=1.8.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=8

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/arm-none-eabi-ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/usr/bin/arm-none-eabi-readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/arm-none-eabi-strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to CMSIS_5 (or DOWNLOAD to fetch automatically
CMSIS_5_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/tfm_test_repo-src/CMSIS

//Enable storing of encoded measurements in boot.
CONFIG_TFM_BOOT_STORE_ENCODED_MEASUREMENTS:BOOL=ON

//Store measurement values from all the boot stages. Used for initial
// attestation token.
CONFIG_TFM_BOOT_STORE_MEASUREMENTS:BOOL=ON

//Disable build logs
CONFIG_TFM_BUILD_LOG_QUIET:BOOL=OFF

//Make FPU and MVE operational when SPE and/or NSPE require FPU
// or MVE usage. This alone only enables the coprocessors CP10-CP11,
// whereas CONFIG_TFM_FLOAT_ABI=hard along with  CONFIG_TFM_ENABLE_FP,
// CONFIG_TFM_ENABLE_MVE or CONFIG_TFM_ENABLE_MVE_FP compiles the
// code with hardware FP or MVE instructions and ABI.
CONFIG_TFM_ENABLE_CP10CP11:BOOL=OFF

//Enable/disable FP usage
CONFIG_TFM_ENABLE_FP:BOOL=OFF

//Enable/disable integer MVE usage
CONFIG_TFM_ENABLE_MVE:BOOL=OFF

//Enable/disable floating-point MVE usage
CONFIG_TFM_ENABLE_MVE_FP:BOOL=OFF

//On fatal errors in the secure firmware, halt instead of rebooting.
CONFIG_TFM_HALT_ON_CORE_PANIC:BOOL=OFF

//Enable/disable lazy stacking
CONFIG_TFM_LAZY_STACKING:BOOL=OFF

//Disable the memory usage report
CONFIG_TFM_MEMORY_USAGE_QUIET:BOOL=OFF

//Parse manifest quietly
CONFIG_TFM_PARSE_MANIFEST_QUIET:BOOL=OFF

//Disable printing of partition configuration during build
CONFIG_TFM_PARTITION_QUIET:BOOL=OFF

//The SPM backend [IPC, SFN]
CONFIG_TFM_SPM_BACKEND:STRING=IPC

//Whether to pre-fill partition stacks with a set value to help
// determine stack usage
CONFIG_TFM_STACK_WATERMARKS:BOOL=OFF

//Cross-compilation triplet
CROSS_COMPILE:STRING=arm-none-eabi

//Whether to enable the crypto hardware accelerator on supported
// platforms
CRYPTO_HW_ACCELERATOR:BOOL=ON

//Whether to allow crypto service to store builtin keys. Without
// this, ALL builtin keys must be stored in a platform-specific
// location
CRYPTO_TFM_BUILTIN_KEYS_DRIVER:BOOL=ON

//Debug authentication setting. [CHIP_DEFAULT, NONE, NS_ONLY, FULL
DEBUG_AUTHENTICATION:STRING=CHIP_DEFAULT

//Disable package configuration, target export and installation
DISABLE_PACKAGE_CONFIG_AND_INSTALL:BOOL=ON

FETCHCONTENT_BASE_DIR:STRING=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext

//Disables all attempts to download or update content and assumes
// source dirs already exist
FETCHCONTENT_FULLY_DISCONNECTED:BOOL=OFF

//Enables QUIET option for all content population
FETCHCONTENT_QUIET:BOOL=ON

//When not empty, overrides where to find pre-populated content
// for mbedcrypto
FETCHCONTENT_SOURCE_DIR_MBEDCRYPTO:PATH=

//When not empty, overrides where to find pre-populated content
// for qcbor
FETCHCONTENT_SOURCE_DIR_QCBOR:PATH=

//When not empty, overrides where to find pre-populated content
// for tfm_test_repo
FETCHCONTENT_SOURCE_DIR_TFM_TEST_REPO:PATH=

//Enables UPDATE_DISCONNECTED behavior for all content population
FETCHCONTENT_UPDATES_DISCONNECTED:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of mbedcrypto
FETCHCONTENT_UPDATES_DISCONNECTED_MBEDCRYPTO:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of qcbor
FETCHCONTENT_UPDATES_DISCONNECTED_QCBOR:BOOL=OFF

//Enables UPDATE_DISCONNECTED behavior just for population of tfm_test_repo
FETCHCONTENT_UPDATES_DISCONNECTED_TFM_TEST_REPO:BOOL=OFF

//The device configuration file for Firmware Update partition
FWU_DEVICE_CONFIG_FILE:STRING=

//Device support TRIAL component state.
FWU_SUPPORT_TRIAL_STATE:BOOL=OFF

//Git command line client
GIT_EXECUTABLE:FILEPATH=/usr/bin/git

//Explicitly link mbed TLS library to pthread.
LINK_WITH_PTHREAD:BOOL=OFF

//Explicitly link mbed TLS library to trusted_storage.
LINK_WITH_TRUSTED_STORAGE:BOOL=OFF

//Build type of Mbed Crypto library
MBEDCRYPTO_BUILD_TYPE:STRING=minsizerel

//Always apply MBed Crypto patches
MBEDCRYPTO_FORCE_PATCH:BOOL=OFF

//The URL (or path) to retrieve MbedTLS from.
MBEDCRYPTO_GIT_REMOTE:STRING=https://github.com/Mbed-TLS/mbedtls.git

//Library has been downloaded from https://github.com/Mbed-TLS/mbedtls.git,
// tag mbedtls-3.4.0
MBEDCRYPTO_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/mbedcrypto-src

//The version of Mbed Crypto to use
MBEDCRYPTO_VERSION:STRING=mbedtls-3.4.0

//Whether to combine S and NS into either 1 image, or sign each
// seperately
MCUBOOT_IMAGE_NUMBER:STRING=2

//Level of logging to use for MCUboot [OFF, ERROR, WARNING, INFO,
// DEBUG]
MCUBOOT_LOG_LEVEL:STRING=OFF

//Path to MCUboot (or DOWNLOAD to fetch automatically
MCUBOOT_PATH:PATH=DOWNLOAD

//The version of MCUboot to use
MCUBOOT_VERSION:STRING=v1.10.0

//Whether to build NS app
NS:BOOL=ON

//Path to TFM NS Evaluation Application
NS_EVALUATION_APP_PATH:PATH=

//Number of mailbox queue slots
NUM_MAILBOX_QUEUE_SLOT:BOOL=1

//Enable OTP/NV_COUNTERS emulation in RAM. Has no effect on non-default
// implementations of the OTP and NV_COUNTERS
OTP_NV_COUNTERS_RAM_EMULATION:BOOL=OFF

//Use default attest hal implementation.
PLATFORM_DEFAULT_ATTEST_HAL:BOOL=ON

//Whether to use default BL1 or platform-specific one
PLATFORM_DEFAULT_BL1:STRING=ON

//Use default crypto keys implementation.
PLATFORM_DEFAULT_CRYPTO_KEYS:BOOL=ON

//Use default initial attestation_key.
PLATFORM_DEFAULT_IAK:BOOL=ON

//Use default image signing implementation
PLATFORM_DEFAULT_IMAGE_SIGNING:BOOL=ON

//Use default nv counter implementation.
PLATFORM_DEFAULT_NV_COUNTERS:BOOL=ON

//Use default NV seed implementation.
PLATFORM_DEFAULT_NV_SEED:BOOL=ON

//Use trusted on-chip flash to implement OTP memory
PLATFORM_DEFAULT_OTP:BOOL=ON

//Use OTP memory with write support
PLATFORM_DEFAULT_OTP_WRITEABLE:BOOL=ON

//Use default provisioning implementation
PLATFORM_DEFAULT_PROVISIONING:BOOL=ON

//Use default root of trust public key.
PLATFORM_DEFAULT_ROTPK:BOOL=ON

//Use default system reset/halt implementation
PLATFORM_DEFAULT_SYSTEM_RESET_HALT:BOOL=ON

//Use default uart stdout implementation.
PLATFORM_DEFAULT_UART_STDOUT:BOOL=ON

//Path to plaform dir
PLATFORM_DIR:PATH=../../..

//Whether to enable FVP or FPGA build of the platform.
PLATFORM_IS_FVP:BOOL=FALSE

//Whether to use psa-adac secure debug.
PLATFORM_PSA_ADAC_SECURE_DEBUG:BOOL=FALSE

//Path to source dir of psa-adac.
PLATFORM_PSA_ADAC_SOURCE_PATH:PATH=DOWNLOAD

//The version of psa-adac to use.
PLATFORM_PSA_ADAC_VERSION:STRING=4c35930fb6df95400ea4fe5722acaaa594ac3b8b

//User defined header file for TF-M config
PROJECT_CONFIG_HEADER_FILE:FILEPATH=

//Always apply PSA arch tests patches
PSA_ARCH_TESTS_FORCE_PATCH:BOOL=OFF

//Path to PSA arch tests (or DOWNLOAD to fetch automatically
PSA_ARCH_TESTS_PATH:PATH=DOWNLOAD

//The version of PSA arch tests to use
PSA_ARCH_TESTS_VERSION:STRING=cf8bd71

//Enable MM-IOVEC
PSA_FRAMEWORK_HAS_MM_IOVEC:BOOL=OFF

//The AEAD algorithm to use for authenticated encryption in Protected
// Storage
PS_CRYPTO_AEAD_ALG:STRING=PSA_ALG_GCM

//Enable encryption for Protected Storage partition
PS_ENCRYPTION:BOOL=ON

//Eliminate floating-point support completely
QCBOR_OPT_DISABLE_FLOAT_ALL:BOOL=ON

//Eliminate dependency on FP hardware and FP instructions
QCBOR_OPT_DISABLE_FLOAT_HW_USE:BOOL=ON

//Eliminate support for half-precision and CBOR preferred serialization
QCBOR_OPT_DISABLE_FLOAT_PREFERRED:BOOL=ON

//Library has been downloaded from https://github.com/laurencelundblade/QCBOR.git,
// tag v1.2
QCBOR_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/qcbor-src

//The version of qcbor to use
QCBOR_VERSION:STRING=v1.2

//Enable secure UART1
SECURE_UART1:BOOL=OFF

//Use symmetric crypto for inital attestation
SYMMETRIC_INITIAL_ATTESTATION:BOOL=OFF

//Whether to build BL1_1 tests
TEST_BL1_1:BOOL=OFF

//Whether to build BL1_2 tests
TEST_BL1_2:BOOL=OFF

//Whether to build NS regression tests
TEST_NS:BOOL=OFF

//Which (if any) of the PSA API tests should be compiled
TEST_PSA_API:STRING=

//Whether to build S regression tests
TEST_S:BOOL=OFF

//Whether BL1 will log to uart
TFM_BL1_LOGGING:BOOL=OFF

//Whether to build the binary for lcov tools
TFM_CODE_COVERAGE:BOOL=OFF

//Enable code sharing between MCUboot and secure firmware
TFM_CODE_SHARING:PATH=OFF

//The maximum permitted size for manifest in psa_fwu_start(), in
// bytes.
TFM_CONFIG_FWU_MAX_MANIFEST_SIZE:STRING=0

//The maximum permitted size for block in psa_fwu_write, in bytes.
TFM_CONFIG_FWU_MAX_WRITE_SIZE:STRING=1024

//Add debug symbols. Note that setting CMAKE_BUILD_TYPE to Debug
// or RelWithDebInfo will also add debug symbols.
TFM_DEBUG_SYMBOLS:BOOL=ON

//Provision with dummy values. NOT to be used in production
TFM_DUMMY_PROVISIONING:BOOL=ON

//On fatal errors in the secure firmware, capture info about the
// exception. Print the info if the SPM log level is sufficient.
TFM_EXCEPTION_INFO_DUMP:BOOL=OFF

//Path to tf-m-extras repo (or DOWNLOAD to fetch automatically
TFM_EXTRAS_REPO_PATH:PATH=

//The version of tf-m-extras to use
TFM_EXTRAS_REPO_VERSION:STRING=

//Path to extra cmake config file
TFM_EXTRA_CONFIG_PATH:PATH=

//Path to extra generated file list. Appended to stardard TFM generated
// file list.
TFM_EXTRA_GENERATED_FILE_LIST_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/platform/ext/target/stm/common/generated_file_list.yaml

//Extra manifest list file(s), used to list extra Secure Partition
// manifests.
TFM_EXTRA_MANIFEST_LIST_FILES:FILEPATH=

//List of extra Secure Partitions directories. An extra Secure
// Parition folder contains source code, CMakeLists.txt and manifest
// files
TFM_EXTRA_PARTITION_PATHS:PATH=

//Fault injection hardening profile [OFF, LOW, MEDIUM, HIGH]
TFM_FIH_PROFILE:STRING=OFF

//Bootloader configure file for Firmware Update partition
TFM_FWU_BOOTLOADER_LIB:STRING=mcuboot

//Path to which to install TF-M files
TFM_INSTALL_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/install

//Isolation level
TFM_ISOLATION_LEVEL:STRING=1

//TF-M native Secure Partition manifests list file
TFM_MANIFEST_LIST:FILEPATH=/home/zhangyushao/tfm_2/trusted-firmware-m/tools/tfm_manifest_list.yaml

//Config to use for Mbed Crypto. For increased flexibility when
// pointing to a file, set the type of this setting to 'STRING'
// by passing the :<type> portion when specifying the setting value
// in the command line. E.g. '-DTFM_MBEDCRYPTO_CONFIG_PATH:STRING=some_file_which_is_generated.h'
// This can be useful if the config file is generated and placed
// inside a directory already added to the include path of mbedtls.
TFM_MBEDCRYPTO_CONFIG_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/lib/ext/mbedcrypto/mbedcrypto_config/tfm_mbedcrypto_config_default.h

//Config to append to standard Mbed Crypto config, used by platforms
// to cnfigure feature support
TFM_MBEDCRYPTO_PLATFORM_EXTRA_CONFIG_PATH:PATH=

//Config to use psa crypto setting for Mbed Crypto.
TFM_MBEDCRYPTO_PSA_CRYPTO_CONFIG_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/lib/ext/mbedcrypto/mbedcrypto_config/crypto_config_default.h

//Support NSPE OS providing NSPE client_id
TFM_NS_MANAGE_NSID:BOOL=OFF

//How many NS NV counters are enabled
TFM_NS_NV_COUNTER_AMOUNT:STRING=0

//Enable Crypto partition
TFM_PARTITION_CRYPTO:BOOL=ON

//Enable Example
TFM_PARTITION_EXAMPLE:BOOL=ON

//Enable firmware update partition
TFM_PARTITION_FIRMWARE_UPDATE:BOOL=OFF

//Enable Initial Attestation partition
TFM_PARTITION_INITIAL_ATTESTATION:BOOL=OFF

//Enable Internal Trusted Storage partition
TFM_PARTITION_INTERNAL_TRUSTED_STORAGE:BOOL=ON

//Set minsizerel SP log level as Silence level
TFM_PARTITION_LOG_LEVEL:STRING=TFM_PARTITION_LOG_LEVEL_SILENCE

//Enable Non-Secure Mailbox Agent partition
TFM_PARTITION_NS_AGENT_MAILBOX:BOOL=OFF

//Enable Non-Secure TrustZone Agent partition
TFM_PARTITION_NS_AGENT_TZ:BOOL=ON

//Enable Platform partition
TFM_PARTITION_PLATFORM:BOOL=OFF

//Enable Protected Storage partition
TFM_PARTITION_PROTECTED_STORAGE:BOOL=OFF

//Platform to build TF-M for. Must be either a relative path from
// [TF-M]/platform/ext/target, or an absolute path.
TFM_PLATFORM:STRING=stm/TFM_FreeRTOS

//Whether to use a platform specific inter-core communication instead
// of mailbox in dual-cpu topology
TFM_PLAT_SPECIFIC_MULTI_CORE_COMM:BOOL=OFF

//Profile to use
TFM_PROFILE:STRING=

//Use Privileged execute never (PXN)
TFM_PXN_ENABLE:BOOL=OFF

//No help, variable specified on the command line.
TFM_SPM_BACKEND:UNINITIALIZED=IPC

//Set minsizerel SPM log level as Silence level
TFM_SPM_LOG_LEVEL:STRING=TFM_SPM_LOG_LEVEL_SILENCE

//Path to TFM tests
TFM_TEST_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/tfm_test_repo-src/test

//Library has been downloaded from https://git.trustedfirmware.org/TF-M/tf-m-tests.git,
// tag 7cf20ef
TFM_TEST_REPO_PATH:PATH=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/tfm_test_repo-src

//The version of tf-m-tests to use
TFM_TEST_REPO_VERSION:STRING=7cf20ef

//Path to TFM compiler toolchain file
TFM_TOOLCHAIN_FILE:FILEPATH=/home/zhangyushao/tfm_2/trusted-firmware-m/toolchain_GNUARM.cmake

//Value Computed by CMake
Trusted Firmware M_BINARY_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build

//Value Computed by CMake
Trusted Firmware M_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
Trusted Firmware M_SOURCE_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m

//Allow unsafe builds. These builds ARE NOT SECURE.
UNSAFE_BUILD:BOOL=OFF

//Build mbed TLS shared library.
USE_SHARED_MBEDTLS_LIBRARY:BOOL=OFF

//Build mbed TLS static library.
USE_STATIC_MBEDTLS_LIBRARY:BOOL=ON

//Dependencies for the target
crypto_service_mbedcrypto_LIB_DEPENDS:STATIC=general;psa_interface;general;platform_s;general;crypto_service_crypto_hw;

//Dependencies for the target
crypto_service_mbedtls_LIB_DEPENDS:STATIC=general;crypto_service_mbedx509;

//Dependencies for the target
crypto_service_mbedx509_LIB_DEPENDS:STATIC=general;crypto_service_mbedcrypto;

//Value Computed by CMake
mbed TLS_BINARY_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/secure_fw/partitions/crypto/mbedcrypto

//Value Computed by CMake
mbed TLS_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
mbed TLS_SOURCE_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/mbedcrypto-src

//Value Computed by CMake
qcbor_BINARY_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/qcbor/QCBOR

//Value Computed by CMake
qcbor_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
qcbor_SOURCE_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/qcbor-src

//Value Computed by CMake
tfm_ns_BINARY_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/tf-m-tests/app

//Value Computed by CMake
tfm_ns_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
tfm_ns_SOURCE_DIR:STATIC=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/lib/ext/tfm_test_repo-src/app


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_AR
CMAKE_ASM_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER_RANLIB
CMAKE_ASM_COMPILER_RANLIB-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=22
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=ELF
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Unix Makefiles
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/home/zhangyushao/tfm_2/trusted-firmware-m
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=39
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/share/cmake-3.22
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test C_COMPILER_SUPPORTS_WFORMAT_SIGNEDNESS
C_COMPILER_SUPPORTS_WFORMAT_SIGNEDNESS:INTERNAL=
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[/usr/bin/git][v2.34.1()]
//Details about finding Python3
FIND_PACKAGE_MESSAGE_DETAILS_Python3:INTERNAL=[/usr/bin/python3.10][cfound components: Interpreter ][v3.10.6()]
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//STRINGS property for variable: TFM_FIH_PROFILE
TFM_FIH_PROFILE-STRINGS:INTERNAL=OFF;LOW;MEDIUM;HIGH
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=/home/zhangyushao/tfm_2/trusted-firmware-m/cmake_build/install
//Path to a program.
_Python3_EXECUTABLE:INTERNAL=/usr/bin/python3.10
//Python3 Properties
_Python3_INTERPRETER_PROPERTIES:INTERNAL=Python;3;10;6;64;;;/usr/lib/python3.10;/usr/lib/python3.10;/usr/lib/python3/dist-packages;/usr/lib/python3/dist-packages
_Python3_INTERPRETER_SIGNATURE:INTERNAL=61380851b1f49cd20124cec6c9ca8095

